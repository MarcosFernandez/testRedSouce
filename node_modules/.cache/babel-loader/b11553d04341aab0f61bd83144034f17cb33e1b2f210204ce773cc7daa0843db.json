{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Descargas/react-base/src/components/Player.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getSuccesRate = skill => {\n  return (7 - skill) / 6;\n};\nexport const chanceOfSuccess = (power, skill, succesNumber) => {\n  if (succesNumber < 0) return 0;\n  if (power === 0) {\n    if (succesNumber === 0) return 1;\n    return 0;\n  }\n  if (power < succesNumber) return 0;\n  const successRate = getSuccesRate(skill);\n  return successRate * chanceOfSuccess(power - 1, skill, succesNumber - 1) + (1 - successRate) * chanceOfSuccess(power - 1, skill, succesNumber);\n};\nexport const Player = ({\n  playerNumber,\n  player,\n  setPlayer\n}) => {\n  const handlerStatChange = (currentStats, newStat, updatePlayer) => {\n    const intValue = parseInt(newStat.value);\n    if (isNaN(intValue)) return;\n    if (intValue === currentStats[newStat.key]) return;\n    if (newStat.key === \"skill\") {\n      if (intValue < 2 || intValue > 6) return;\n    }\n    currentStats[newStat.key] = newStat.value;\n    updatePlayer({\n      ...currentStats\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Player \", playerNumber, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `p${playerNumber}power`,\n        type: \"number\",\n        onChange: e => handlerStatChange(player, {\n          key: \"power\",\n          value: e.target.value\n        }, setPlayer),\n        value: player.power\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `p${playerNumber}power`,\n        children: [\"Player\", playerNumber, \" Power\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `p${playerNumber}tough`,\n        type: \"number\",\n        onChange: e => handlerStatChange(player, {\n          key: \"toughness\",\n          value: e.target.value\n        }, setPlayer),\n        value: player.toughness\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `p${playerNumber}tough`,\n        children: [\"Player\", playerNumber, \" Toughness\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `p${playerNumber}skill`,\n        type: \"number\",\n        onChange: e => handlerStatChange(player, {\n          key: \"skill\",\n          value: e.target.value\n        }, setPlayer),\n        value: player.skill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `p${playerNumber}skill`,\n        children: [\"Player\", playerNumber, \" Skill\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getSuccesRate","skill","chanceOfSuccess","power","succesNumber","successRate","Player","playerNumber","player","setPlayer","handlerStatChange","currentStats","newStat","updatePlayer","intValue","parseInt","value","isNaN","key","children","id","type","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","toughness","_c","$RefreshReg$"],"sources":["/home/marcos/Descargas/react-base/src/components/Player.js"],"sourcesContent":["import React from \"react\";\n\n\nconst getSuccesRate = (skill) => {\n    return (7 - skill) / 6;\n}\n\nexport const chanceOfSuccess = (power,skill,succesNumber) => {\n    \n    if(succesNumber < 0) return 0;\n    if (power === 0) {\n        if (succesNumber === 0) return 1;\n        return 0;\n    } \n    if (power < succesNumber) return 0;\n\n\n    const successRate = getSuccesRate(skill); \n    return successRate * chanceOfSuccess(power-1, skill, succesNumber -1) +\n           (1 - successRate) * chanceOfSuccess(power-1, skill, succesNumber); \n}\n\n\n\nexport const Player = ({playerNumber,player,setPlayer}) => {\n\n    const handlerStatChange = (currentStats, newStat, updatePlayer) => {\n        \n        const intValue = parseInt(newStat.value);\n        if(isNaN(intValue)) return;  \n        \n        if (intValue === currentStats[newStat.key]) return; \n\n        if (newStat.key === \"skill\"){\n            if (intValue < 2 || intValue > 6) return;\n        }\n\n        currentStats[newStat.key] = newStat.value;\n        updatePlayer({...currentStats});\n    }\n   \n    return(\n      <div>\n        Player {playerNumber}\n        <form>\n          <input id={`p${playerNumber}power`} type=\"number\"\n            onChange={(e) => handlerStatChange(player, {key: \"power\", value: e.target.value}, setPlayer)}\n            value={player.power}>\n          </input>\n          <label htmlFor={`p${playerNumber}power`}>Player{playerNumber} Power</label>\n          <input id={`p${playerNumber}tough`} type=\"number\"\n            onChange={(e)=> handlerStatChange(player, {key: \"toughness\", value: e.target.value}, setPlayer) }\n            value={player.toughness}>\n          </input>\n          <label htmlFor={`p${playerNumber}tough`}>Player{playerNumber} Toughness</label>\n          <input id={`p${playerNumber}skill`} type=\"number\"\n            onChange={(e)=>handlerStatChange(player, {key: \"skill\", value: e.target.value}, setPlayer)}\n            value={player.skill}>\n          </input>\n          <label htmlFor={`p${playerNumber}skill`}>Player{playerNumber} Skill</label>\n        </form>\n      </div>\n      \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}